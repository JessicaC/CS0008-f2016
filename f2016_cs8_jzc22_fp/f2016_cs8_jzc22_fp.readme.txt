Define a class 'participant'.
Define initializer method. Set name and initial distance if provided. If initial distance is not specified, it should be
set to zero.
Add single distance to the distance accumulator and increments runs by 1. Argument d is a single float.
Add an array of distances to distance accumulator. Argument 1d is a list of floats
Get the name of the participant of the current instance
Get the current value of the distance accumulator.
Get number of runs
Return a string with name, total distance run, and how many distances the object added
Convert to csv

Define the master input file - f2016_cs8_fp.data.txt.
Define the output file - f2016_cs8_jzc22_fp.data.output.csv
Create list to store data files read from master input file.
Create list to store data read from all data files.
Create dictionary to store runners and distances.
Create dictionary to store runners and record count.

Define function processMasterFile(fh).
For each line in a file, strip \n to get data file name and add to data_file_list.

Define function processDataFile(fh).
For each line, strip \n and the comma and add to data_list.
Update runner distance dictionary and the runner appearance dictionary.

Under printKV(key, value, klen=0), get the length of "key".
Define space to be maximum of klen and length of 'key'.
Use 'space' to format the key.
The format of the value changes according to its type.

Define main function
Process files - open, read, close
Get number of files, total number of lines
Initialize total number of runners, total distance run by all runners, and max and min distance
Initialize number of runners with multiple records.
Get total distance, total number of runners
Determine max and min distance by comparing them to the variable 'distance'

Open and write to output file
If number of records is greater than 1, add to number of runners with multiple records.
Close output file

Print out the output before program terminates.
Call the main function

